{"version":3,"file":"static/js/292.82cdcfe7.chunk.js","mappings":"yNAGaA,EAAQC,EAAAA,MAAW,SAACC,GAC/BC,EAAAA,EAAAA,QAAgB,mBAAD,OAAoBD,EAAME,QACzC,OAA6BD,EAAAA,EAAAA,GAAQ,mBAAD,OAAoBD,EAAME,QAAtDC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAEf,OACE,oCAAWJ,GAAK,IAAEK,QAAS,KAAK,UAC9B,mBAAOC,SAAU,CAAC,EAAG,EAAG,GAAG,WACzB,iBAAMC,SAAUJ,EAAM,UAAUI,SAAUC,SAAUJ,EAAUK,EAAE,UAC9D,iCAAsBC,MAAOV,EAAMU,WAErC,iBAAMH,SAAUJ,EAAM,UAAUI,SAAUC,SAAUJ,EAAUO,EAAE,UAC9D,iCAAsBD,MAAO,gBAKvC,ICyBA,EAvCqBX,EAAAA,KACnBA,EAAAA,YAAiB,WAAyBa,GAAS,IAA/BC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aACxB,EAA4Bf,EAAAA,UAAe,GAAM,eAA1CgB,EAAM,KAAEC,EAAS,KAExB,OACE,UAAC,KAAM,CACLC,OAAQ,CAAEF,QAAQ,GAClBG,MAAO,CAAEC,OAAQ,SACjBC,OAAQ,CACNC,IAAK,GACLC,KAAM,GACNC,IAAK,IACLC,SAAUX,EAAKY,eAAiBZ,EAAKY,eAAiB,EAAE,IAAK,IAAK,GAClEnB,SAAUO,EAAKa,eAAiBb,EAAKa,eAAiB,CAAC,EAAG,EAAG,IAE/DC,cAAe,SAACC,GAAC,OAAKC,YAAW,kBAAMb,GAAU,EAAK,GAAE,IAAI,EAC5Dc,aAAc,SAACF,GAAC,OAAKZ,GAAU,EAAM,EAAC,WACtC,yBAAce,UAAW,MACzB,0BACEC,MAAO,IACPb,OAAQ,IACRY,UAAW,IACXrB,MAAO,QACPc,SAAU,EAAE,IAAK,IAAK,GACtBlB,SAAU,CAAC,EAAG,IAAK,GACnB2B,YAAU,KAEZ,SAACnC,EAAK,CACJI,MAAOW,EAAKX,MACZQ,MAAOI,EAAaoB,IACpBC,MAAOtB,EAAKsB,MAAQtB,EAAKsB,MAAQ,CAAC,GAAK,GAAK,IAC5C7B,SAAUO,EAAKP,YAEjB,SAAC8B,EAAA,EAAa,CAACxB,IAAKA,EAAKyB,WAAYtB,EAAQuB,aAAcvB,MAGjE,I","sources":["components/Model.jsx","components/CanvasObject.jsx"],"sourcesContent":["import React from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\n\nexport const Model = React.memo((props) => {\n  useGLTF.preload(`./assets/models/${props.model}`);\n  const { nodes, materials } = useGLTF(`./assets/models/${props.model}`);\n\n  return (\n    <group {...props} dispose={null}>\n      <group rotation={[0, 0, 0]}>\n        <mesh geometry={nodes[\"w1ll-k\"].geometry} material={materials.k}>\n          <meshStandardMaterial color={props.color} />\n        </mesh>\n        <mesh geometry={nodes[\"w1ll-b\"].geometry} material={materials.b}>\n          <meshStandardMaterial color={\"#fff\"} />\n        </mesh>\n      </group>\n    </group>\n  );\n});\n","import React from \"react\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Model } from \"./Model\";\r\n\r\nconst CanvasObject = React.memo(\r\n  React.forwardRef(({ item, currentColor }, ref) => {\r\n    const [scroll, setScroll] = React.useState(false);\r\n\r\n    return (\r\n      <Canvas\r\n        resize={{ scroll: false }}\r\n        style={{ height: \"140px\" }}\r\n        camera={{\r\n          fov: 10,\r\n          near: 0.1,\r\n          far: 5000,\r\n          position: item.cameraPosition ? item.cameraPosition : [-600, 500, 0],\r\n          rotation: item.cameraRotation ? item.cameraRotation : [0, 0, 0],\r\n        }}\r\n        onPointerDown={(e) => setTimeout(() => setScroll(true), 250)}\r\n        onPointerOut={(e) => setScroll(false)}>\r\n        <ambientLight intensity={0.5} />\r\n        <rectAreaLight\r\n          width={400}\r\n          height={400}\r\n          intensity={0.75}\r\n          color={\"white\"}\r\n          position={[-165, 100, 0]}\r\n          rotation={[0, 180, 0]}\r\n          castShadow\r\n        />\r\n        <Model\r\n          model={item.model}\r\n          color={currentColor.hex}\r\n          scale={item.scale ? item.scale : [0.1, 0.1, 0.1]}\r\n          rotation={item.rotation}\r\n        />\r\n        <OrbitControls ref={ref} enableZoom={scroll} enableRotate={scroll} />\r\n      </Canvas>\r\n    );\r\n  })\r\n);\r\n\r\nexport default CanvasObject;\r\n"],"names":["Model","React","props","useGLTF","model","nodes","materials","dispose","rotation","geometry","material","k","color","b","ref","item","currentColor","scroll","setScroll","resize","style","height","camera","fov","near","far","position","cameraPosition","cameraRotation","onPointerDown","e","setTimeout","onPointerOut","intensity","width","castShadow","hex","scale","OrbitControls","enableZoom","enableRotate"],"sourceRoot":""}